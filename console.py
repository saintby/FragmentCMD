import requests, configparser
from colorama import Style, Fore
from datetime import datetime

time_format = '%d-%m-%Y %H:%M:%S'

class CustomConfigParser(configparser.ConfigParser):
    def optionxform(self, optionstr):
        return optionstr  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

config = CustomConfigParser()
config.read("config.ini")

def save_config():
    with open('config.ini', 'w') as config_file:
        config.write(config_file)

def buyStars(SEED):
    print(f"[{datetime.now().strftime(time_format)}] –í–ø–∏—à–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º, –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –∑–≤—ë–∑–¥—ã.")
    print(f"[{datetime.now().strftime(time_format)}] –ú–æ–∂–Ω–æ –∫–∞–∫ t.me/..., —Ç–∞–∫ –∏ @username –∏–ª–∏ username.")
    username: str = input(f"[{datetime.now().strftime(time_format)}] >>> ")
    print(f"[{datetime.now().strftime(time_format)}] –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–ø–∏—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")
    print(f"[{datetime.now().strftime(time_format)}] –ü–∏—à–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç 50 –¥–æ 1,000,000")
    amount: int = int(input(f"[{datetime.now().strftime(time_format)}] >>> "))
    print(f"[{datetime.now().strftime(time_format)}] –¢–µ–ø–µ—Ä—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ:")
    print(f"[{datetime.now().strftime(time_format)}] üë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {username}")
    print(f"[{datetime.now().strftime(time_format)}] ‚ú® –ó–≤—ë–∑–¥—ã: {amount} —à—Ç.")
    print(f"[{datetime.now().strftime(time_format)}] –í—Å—ë –≤–µ—Ä–Ω–æ?")
    print(f"[{datetime.now().strftime(time_format)}] [1] –î–∞")
    print(f"[{datetime.now().strftime(time_format)}] [2] –ù–µ—Ç, –∏—Å–ø—Ä–∞–≤–∏—Ç—å.")
    f: int = int(input(f"[{datetime.now().strftime(time_format)}] >>> "))
    if f == 1:
        url = "https://fragmentapi.nightstranger.space/buyStarsWithoutKYC"
        headers = {
            "Content-Type": "application/json"
        }

        data = {
            "username": username,
            "amount": amount,
            "seed": SEED
        }

        try:
            response = requests.post(url, headers=headers, json=data)

            if response.status_code == 200:
                result = response.json()
                if result.get("success"):
                    print(f"[{datetime.now().strftime(time_format)}] –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    print(f"[{datetime.now().strftime(time_format)}] üë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {username}")
                    print(f"[{datetime.now().strftime(time_format)}] ‚ú® –ó–≤—ë–∑–¥—ã: {amount} —à—Ç.")
                else:
                    print(f"[{datetime.now().strftime(time_format)}] ‚ö†Ô∏è –ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
                    print(
                        f"[{datetime.now().strftime(time_format)}] ‚ùå –ü—Ä–∏—á–∏–Ω–∞: {result.get('message', 'Unknown error')}")

            elif response.status_code == 400:
                print("\n‚ö†Ô∏è –ü–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å.")
                print(f"Message: {response.json().get('message', 'Invalid request data')}")
            elif response.status_code == 422:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.")
                print(f"Message: {response.json().get('message', 'Validation failed')}")
            elif response.status_code == 500:
                print("\nüí• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.")
                print(f"Message: {response.json().get('message', 'Internal server error')}")
            else:
                print("\n‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –æ—à–∏–±–∫–∏:", response.status_code)
                print("Response:", response.json())

        except requests.RequestException as e:
            print("\nüö® –ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è:", str(e))

    if f == 2:
        buyStars(SEED)


def buyPremium(SEED):
    print(f"[{datetime.now().strftime(time_format)}] –í–ø–∏—à–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º, –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å Premium.")
    print(f"[{datetime.now().strftime(time_format)}] –ú–æ–∂–Ω–æ –∫–∞–∫ t.me/..., —Ç–∞–∫ –∏ @username –∏–ª–∏ username.")
    username: str = input(f"[{datetime.now().strftime(time_format)}] >>> ")
    print(f"[{datetime.now().strftime(time_format)}] –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–ø–∏—à–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏.")
    print(f"[{datetime.now().strftime(time_format)}] –ü–∏—à–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–∏–º–≤–æ–ª–æ–≤: 3, 6, 12.")
    duration: int = int(input(f"[{datetime.now().strftime(time_format)}] >>> "))
    print(f"[{datetime.now().strftime(time_format)}] –¢–µ–ø–µ—Ä—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ:")
    print(f"[{datetime.now().strftime(time_format)}] üë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {username}")
    print(f"[{datetime.now().strftime(time_format)}] üïô –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–µ—Å.")
    print(f"[{datetime.now().strftime(time_format)}] –í—Å—ë –≤–µ—Ä–Ω–æ?")
    print(f"[{datetime.now().strftime(time_format)}] [1] –î–∞")
    print(f"[{datetime.now().strftime(time_format)}] [2] –ù–µ—Ç, –∏—Å–ø—Ä–∞–≤–∏—Ç—å.")
    f: int = int(input(f"[{datetime.now().strftime(time_format)}] >>> "))
    if f == 1:
        url = "https://fragmentapi.nightstranger.space/buyPremiumWithoutKYC"
        headers = {
            "Content-Type": "application/json"
        }

        data = {
            "username": username,
            "duration": duration,
            "seed": SEED
        }

        try:
            response = requests.post(url, headers=headers, json=data)

            if response.status_code == 200:
                result = response.json()
                if result.get("success"):
                    print(f"[{datetime.now().strftime(time_format)}] –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    print(f"[{datetime.now().strftime(time_format)}] üë§ –Æ–∑–µ—Ä–Ω–µ–π–º: {username}")
                    print(f"[{datetime.now().strftime(time_format)}] üïô –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–µ—Å.")
                else:
                    print(f"[{datetime.now().strftime(time_format)}] ‚ö†Ô∏è –ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
                    print(
                        f"[{datetime.now().strftime(time_format)}] ‚ùå –ü—Ä–∏—á–∏–Ω–∞: {result.get('message', 'Unknown error')}")

            elif response.status_code == 400:
                print("\n‚ö†Ô∏è –ü–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å.")
                print(f"Message: {response.json().get('message', 'Invalid request data')}")
            elif response.status_code == 422:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.")
                print(f"Message: {response.json().get('message', 'Validation failed')}")
            elif response.status_code == 500:
                print("\nüí• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.")
                print(f"Message: {response.json().get('message', 'Internal server error')}")
            else:
                print("\n‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –æ—à–∏–±–∫–∏:", response.status_code)
                print("Response:", response.json())

        except requests.RequestException as e:
            print("\nüö® –ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è:", str(e))

    elif f == 2:
        buyPremium(SEED)


def getBalance(SEED):
    url = "https://fragmentapi.nightstranger.space/getBalance"
    headers = {
        "Content-Type": "application/json"
    }
    data = {
        "seed": SEED
    }

    try:
        response = requests.post(url, headers=headers, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get("success"):
                print(f"[{datetime.now().strftime(time_format)}] –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                print(f"[{datetime.now().strftime(time_format)}] üí∏ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞: {result.get('balance')} TON")
            else:
                print(f"[{datetime.now().strftime(time_format)}] ‚ö†Ô∏è –ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
                print(f"[{datetime.now().strftime(time_format)}] ‚ùå –ü—Ä–∏—á–∏–Ω–∞: {result.get('message', 'Unknown error')}")

        elif response.status_code == 400:
            print("\n‚ö†Ô∏è –ü–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å.")
            print(f"Message: {response.json().get('message', 'Invalid request data')}")
        elif response.status_code == 422:
            print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.")
            print(f"Message: {response.json().get('message', 'Validation failed')}")
        elif response.status_code == 500:
            print("\nüí• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.")
            print(f"Message: {response.json().get('message', 'Internal server error')}")
        else:
            print("\n‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –æ—à–∏–±–∫–∏:", response.status_code)
            print("Response:", response.json())

    except requests.RequestException as e:
        print("\nüö® –ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è:", str(e))

def getSeed():
    try:
        config.get('Main', 'SEED')
    except configparser.NoOptionError:
        print(
            f"[{datetime.now().strftime(time_format)}] –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏ Seed / Memo —Ç–≤–æ–µ–≥–æ TON-–∫–æ—à–µ–ª—å–∫–∞.")
        print(f"[{datetime.now().strftime(time_format)}] –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, –µ—Å—Ç—å –≤ —Ç–µ–º–µ –Ω–∞ Lolz.")
        s = input(f"[{datetime.now().strftime(time_format)}] >>> ")
        config["Main"]["SEED"] = s
        with open('config.ini', 'w') as config_file:
            config.write(config_file)
        print(f"[{datetime.now().strftime(time_format)}] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
        print(f"[{datetime.now().strftime(time_format)}] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return config["Main"]["SEED"]

def updateSeed():
    print(f"[{datetime.now().strftime(time_format)}] –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏ Seed / Memo —Ç–≤–æ–µ–≥–æ TON-–∫–æ—à–µ–ª—å–∫–∞.")
    print(f"[{datetime.now().strftime(time_format)}] –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, –µ—Å—Ç—å –≤ —Ç–µ–º–µ –Ω–∞ Lolz.")
    s = input(f"[{datetime.now().strftime(time_format)}] >>> ")
    config["Main"]["SEED"] = s
    with open('config.ini', 'w') as config_file:
        config.write(config_file)
    print(f"[{datetime.now().strftime(time_format)}] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
    print(f"[{datetime.now().strftime(time_format)}] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return config["Main"]["SEED"]


def main():
    logo = """)

‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     
‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ 
‚ñà‚ñà‚ñà    ‚ñà‚ñÄ    ‚ñà‚ñà‚ñà    ‚ñà‚ñÄ     ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà 
‚ñÑ‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ      ‚ñÑ‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ         ‚ñà‚ñà‚ñà   ‚ñÄ 
‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ     ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ         ‚ñà‚ñà‚ñà     
‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà            ‚ñà‚ñà‚ñà     
‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà            ‚ñà‚ñà‚ñà     
‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà           ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÄ   

"""
    VERSION = "\nv1.0"
    msg = f"""

{Fore.LIGHTWHITE_EX}{Style.BRIGHT} * Telegram: {Fore.LIGHTRED_EX} t.me/maybewearedxxd
{Fore.LIGHTWHITE_EX}{Style.BRIGHT} * VK: {Fore.LIGHTRED_EX} vk.com/christyoursaver
{Fore.LIGHTWHITE_EX}{Style.BRIGHT} * GitHub: {Fore.LIGHTRED_EX} github.com/saintby
{Fore.LIGHTWHITE_EX}{Style.BRIGHT} * Lolz: {Fore.LIGHTRED_EX} lolz.live/members/6469293/
{Fore.LIGHTWHITE_EX}{Style.BRIGHT} * FunPay: {Fore.LIGHTRED_EX} funpay.com/users/2763155/
"""
    print(logo + VERSION + msg)
    print(f"[{datetime.now().strftime(time_format)}] –ü—Ä–∏–≤–µ—Ç!")
    SEED = getSeed()
    while True:
        print(f"[{datetime.now().strftime(time_format)}] –í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print(f"[{datetime.now().strftime(time_format)}] [1] –ö—É–ø–∏—Ç—å –∑–≤—ë–∑–¥—ã")
        print(f"[{datetime.now().strftime(time_format)}] [2] –ö—É–ø–∏—Ç—å Premium")
        print(f"[{datetime.now().strftime(time_format)}] [3] –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞")
        print(f"[{datetime.now().strftime(time_format)}] [4] –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        print(f"[{datetime.now().strftime(time_format)}] P.S. –î–∞–Ω–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞!")
        print(f"[{datetime.now().strftime(time_format)}] [5] –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        c: int = int(input(f"[{datetime.now().strftime(time_format)}] >>> "))

        if c == 1:
            buyStars(SEED)

        elif c == 2:
            buyPremium(SEED)

        elif c == 3:
            getBalance(SEED)

        elif c == 4:
            SEED = updateSeed()

        elif c == 5:
            print(f"[{datetime.now().strftime(time_format)}] –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!")
            print(f"[{datetime.now().strftime(time_format)}] –ó–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å")
            exit()

if __name__ == "__main__":
    main()
